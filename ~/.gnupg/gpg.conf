# Use UTF-8 for everything at all times.
display-charset utf-8
utf8-strings

# Maximum compression.
compress-level 9
bzip2-compress-level 9

# Refuse to run if secure memory is unavailable.
require-secmem

# Disable copyright notice.
no-greeting

# Don't leak fingerprintable data in output.
no-emit-version
no-comments

# Lock database files when needed.
# Unlock only when the process exits.
lock-once

# Terminate when the status file descriptor is closed.
# This is just proper programming technique.
exit-on-status-write-error

# Avoid storing random seeds in the file system.
no-random-seed-file

# Always verify key signatures when listing.
no-sig-cache

# Always list full key IDs, their fingerprints and keygrips.
# A keygrip is a "hash over the actual public key parameters".
# https://lists.gnupg.org/pipermail/gnupg-users/2012-July/045115.html
# Specifying the keygrip is necessary for secret key operations
# via the gpg-agent since it names the files after the keygrips.
keyid-format long
with-fingerprint
with-subkey-fingerprint
with-keygrip

# Display the calculated validity of user IDs during key listings.
# Display the keyring on which the given keys reside.
list-options show-usage show-uid-validity show-keyring show-sig-expire sort-sigs
verify-options show-uid-validity

# Search revoked keys and always use the configured keyservers.
# Connecting to servers specified in keys is an attack vector.
# Due to denial of service attacks concerns, keyservers don't
# generally perform cryptographic operations on the keys.
# They don't cryptographically verify key revocations.
keyserver-options include-revoked no-honor-keyserver-url

# Disable automatic importing of keys.
# Keys should be managed consciously.
no-auto-key-retrieve
no-auto-key-locate
no-auto-key-import

# When verifying a signature made from a subkey, require that
# the cross-certification "back signature" on the subkey is
# present and valid. This protects against a subtle attack
# against subkeys that can sign.
require-cross-certification

#-----------------------------
# Default & trusted keys
#-----------------------------

# The default key to sign with.
# If this option is not used,
# the default key is the first key
# found in the secret keyring.
default-key 0x8344BB880289F665FC7EF8D85B9928A7DE0F97D5

# Trust the specified key.
# Useful if the key is offline.
# trusted-key 0x8344BB880289F665FC7EF8D85B9928A7DE0F97D5

#-----------------------------
# Algorithms and ciphers
#-----------------------------

# Better defaults for new key generation.
default-new-key-algo rsa4096/cert,sign+rsa4096/encr

# Use the strongest cipher and digest algorithms as well as the maximum number
# of iterations for the symmetric key generation process.
s2k-cipher-algo AES256
s2k-digest-algo SHA512
s2k-mode 3
s2k-count 65011712

# Message digest algorithm used when signing a key.
cert-digest-algo SHA512

# SHA-1 collisions have been found: https://shattered.io/
# Treat SHA-1 as a weak digest algorithm.
weak-digest SHA1

# List of personal cipher, digest and compression preferences.
# When multiple ciphers are supported by all recipients,
# choose the strongest one.
personal-cipher-preferences AES256 AES192 AES CAST5
personal-digest-preferences SHA512 SHA384 SHA256 SHA224
personal-compress-preferences BZIP2 ZLIB ZIP Uncompressed

# This preference list is used for new keys
# and becomes the default for "setpref" in the edit menu.
default-preference-list SHA512 SHA384 SHA256 SHA224 AES256 AES192 AES CAST5 BZIP2 ZLIB ZIP Uncompressed
