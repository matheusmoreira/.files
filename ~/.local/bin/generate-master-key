#!/usr/bin/env bash

# Obtain user name and email from git
name="$(git config user.name)"
email="$(git config user.email)"
comment="${1}"

# The master key is a certification key
# using one of the following algorithms:
#
#   - Non-ECC
#     - RSA
#       - 4096 bits
#   - ECC
#     - EdDSA
#       - Curve ed25519
#
ecc_cipher=EDDSA
curve=ed25519
non_ecc_cipher=RSA
bits=4096

# Use elliptic curve cryptography by default
mode=ecc
usage=cert
expire=0
keyserver=hkps://keys.openpgp.org

ciphers='AES256 AES192 AES'
digests='SHA512 SHA384 SHA256 SHA224'
compressors='BZIP2 ZLIB ZIP Uncompressed'
preferences="${digests} ${ciphers} ${compressors}"

cipher=
cipher_parameter=
echoed_cipher_parameter=

case "${mode}" in
  ecc|ECC)
    cipher="${ecc_cipher}"
    echoed_cipher_parameter="Curve:  ${curve}"
    cipher_parameter="Key-Curve: ${curve}"
    ;;
  *)
    cipher="${non_ecc_cipher}"
    echoed_cipher_parameter="Bits:   ${bits}"
    cipher_parameter="Key-Length: ${bits}"
    ;;
esac

comment_parameter=
echoed_comment_parameter=

if [[ -n "${comment}" ]]; then
  echoed_comment_parameter="Comment: ${comment}"
  comment_parameter="Name-Comment: ${comment}"
else
  echoed_comment_parameter='Comment:'
fi

gpg --batch --full-generate-key <<KEY_PARAMETERS

%echo Generating primary key...
%echo
%echo Cipher: ${cipher}
%echo ${echoed_cipher_parameter}
%echo Usage:  ${usage}
%echo
%echo Name:    ${name}
%echo Email:   ${email}
%echo ${echoed_comment_parameter}
%echo
%echo Expiration:  ${expire}
%echo Key server:  ${keyserver}
%echo Preferences: ${preferences}
%echo

Key-Type: ${cipher}
${cipher_parameter}
Key-Usage: ${usage}

Expire-Date: ${expire}
Keyserver: ${keyserver}
Preferences: ${preferences}

Name-Real: ${name}
Name-Email: ${email}
${comment_parameter}

%commit
%echo Primary key generated.

KEY_PARAMETERS
